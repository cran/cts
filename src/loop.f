      SUBROUTINE LOOP
      LOGICAL ADV
      INTEGER I
      DOUBLE PRECISION U,PU,SSNEW
c      INCLUDE 'model.txt'
c      INCLUDE 'series.txt'
c      INCLUDE 'conpar.txt'
c      INCLUDE 'setcon.txt'
c      INCLUDE 'veccom.txt'
c      INCLUDE 'repcom.txt'
C*****model.txt
      INTEGER PFI,ARP,VRI,CCV,LYAP,SCC,fct
      DOUBLE PRECISION SCALE,VR,CONST,PHI(20),PRDG
      COMMON/MODEL/SCALE,VR,CONST,PHI,PRDG,PFI,ARP,VRI,CCV,LYAP,SCC,fct
      integer for, fty
      common/model/for, fty
C*****repcom.txt
      LOGICAL PRPI
      INTEGER REQSW,KFSW
      DOUBLE PRECISION VOB
c      COMMON/REPCOM/PRPI,REQSW,VOB,KFSW
      COMMON/REPCOM/VOB,REQSW,KFSW,PRPI	
C*****conpar.txt    
      INTEGER NIT,OPM,RGM,KUP,KSP,KST
      DOUBLE PRECISION REQ,CONCRIT,RPERT,IVLAM,FAC,STLAM,SMLAM,GTLAM
c      COMMON/CONPAR/NIT,OPM,RGM,REQ,CONCRIT,RPERT,IVLAM,FAC,STLAM,
c     * SMLAM,GTLAM,KUP,KSP,KST
      COMMON/CONPAR/REQ,CONCRIT,RPERT,IVLAM,FAC,STLAM,
     * SMLAM,GTLAM,NIT,OPM,RGM,KUP,KSP,KST

C*****setcon.txt
      LOGICAL CONV,FAIL
      INTEGER NP,ITCT,PPIND
      DOUBLE PRECISION CSO,CSZ,LAM,SSOLD,GMOLD,GMNEW,SIGSQ,OLDB(22)
c      COMMON/SETCON/CONV,FAIL,NP,ITCT,PPIND,CSO,CSZ,LAM,SSOLD,
c     *GMOLD,GMNEW,SIGSQ,OLDB
      COMMON/SETCON/CSO,CSZ,LAM,SSOLD,
     *GMOLD,GMNEW,SIGSQ,OLDB,CONV,FAIL,NP,ITCT,PPIND
C*****veccom.txt
      DOUBLE PRECISION B(22),NEWB(22),PERB(22),DELB(22),
     * ERR(500),RES(500),PRES(22,500),sres(500)
      COMMON/VECCOM/B,NEWB,PERB,DELB,ERR,RES,PRES,sres
C*****series.txt
      CHARACTER*40 NAME
      INTEGER LEN
      DOUBLE PRECISION TIM(500),SER(500),TDIF(500)
c      COMMON/SERIES/NAME,LEN,TIM,SER,TDIF
      COMMON/SERIES/TIM,SER,TDIF,NAME,LEN

C  FOR USE IN PERTURBATION CALCULATIONS
      IF(PFI.LT.3)THEN
        PU=CSO
      ELSE
        PU=RPERT*1.0D-3
      END IF
C  START OF MAIN LOOP
      DO 100 ITCT=1,NIT
C  COPY OLDB TO B
      DO 200 I=1,NP
      B(I)=OLDB(I)
  200 CONTINUE
      IF(ITCT.EQ.1)THEN
        CALL REPAR
        IF(PRPI)THEN
          PRINT *,'ITERATION 0: ROOT WITH POSITIVE REAL PART'
          STOP
        END IF
        CALL RESGEN
        SSOLD=CSZ
        DO 201 I=1,LEN
        SSOLD=SSOLD+RES(I)*RES(I)
  201   CONTINUE
        GMOLD=GMNEW
        PRINT *,'ITERATION 0:'
        PRINT *,'   LAMBDA = ',LAM
        PRINT *,'   INITIAL SUM OF SQUARES = ',SSOLD
        PRINT *,'   INITIAL PARAMETER VALUES'
        DO 202 I=1,ARP
        PRINT *,'   ',I,'  ',B(I)
  202   CONTINUE
        IF(VRI.EQ.1)THEN
          PRINT *,'   INITIAL OBSERVATION VARIANCE RATIO = ',B(ARP+1)
        END IF
        IF(CCV.EQ.2)THEN
          IF(VRI.EQ.1)THEN
            U=B(ARP+2)
          ELSE
            U=B(ARP+1)
          ENDIF
          PRINT *,'   INITIAL VALUE OF CONSTANT TERM = ',U
        ENDIF
      END IF
C  CALCULATE PERTURBATION VECTOR
      DO 300 I=1,NP
      PERB(I)=PU
  300 CONTINUE
      IF(PFI.EQ.3.OR.PFI.EQ.4)THEN
        DO 301 I=1,ARP
        PERB(I)=PERB(I)*(SCALE+DABS(B(I)))
  301   CONTINUE
      END IF
      DO 303 PPIND=1,NP
      U=PERB(PPIND)
      B(PPIND)=B(PPIND)+U
      CALL REPAR
      IF(PRPI)THEN
        PRINT *,'ITERATION ',ITCT,': ROOT WITH POSITIVE REAL PART'
        STOP
      END IF
      CALL RESGEN
      DO 302 I=1,LEN
      PRES(PPIND,I)=(PRES(PPIND,I)-RES(I))/U
  302 CONTINUE
      B(PPIND)=OLDB(PPIND)
  303 CONTINUE
      PPIND=0
      CALL REJUCE
  304 CALL SEARCH
      DO 305 I=1,NP
      B(I)=NEWB(I)
  305 CONTINUE
      CALL REPAR
      IF(PRPI)THEN
        ADV=.FALSE.
      ELSE
        CALL RESGEN
        SSNEW=CSZ
        DO 306 I=1,LEN
        SSNEW=SSNEW+RES(I)*RES(I)
  306   CONTINUE
        ADV=SSNEW.LT.SSOLD
      END IF
      IF(ADV)THEN
        LAM=LAM/FAC
        IF(LAM.LT.STLAM)LAM=CSZ
        CONV=LAM.LT.SMLAM.AND.SSNEW.GT.(SSOLD*(CSO-CONCRIT))
        SSOLD=SSNEW
        GMOLD=GMNEW
        DO 307 I=1,NP
        OLDB(I)=NEWB(I)
  307   CONTINUE
        IF(CONV)THEN
          RETURN
        ELSE
          PRINT *,'ITERATION :',ITCT
          PRINT *,'   LAMBDA: ',LAM
          PRINT *,'   SUM OF SQUARES: ',SSOLD
          PRINT *,'   PARAMETER VALUES:'
          DO 308 I=1,NP
          PRINT *,'  ',I,'  ',OLDB(I)
  308     CONTINUE
          GOTO 100
        END IF
      ELSE
        LAM=LAM*FAC
        FAIL=LAM.GT.GTLAM
        IF(FAIL)THEN
          RETURN
        ELSE
          IF(LAM.LT.IVLAM)LAM=IVLAM
          GOTO 304
        END IF
      END IF
  100 CONTINUE
      RETURN
      END
